name:  package

env:
  DOTNET_VERSION: '6.0.x'

on:
  push:
    # based on when a tag is applied.
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+-preview[0-9][0-9][0-9]"
jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 15

    steps:

    # 1) Check out the source code so that the workflow can access it.
    - name: Checkout
      uses: actions/checkout@v2

    # 2) Set up the .NET CLI environment for the workflow to use.
    #    The .NET version is specified by the environment variable.
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # 3) Pull the latest tag
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    # 4) Restore the dependencies and tools of a project or solution.
    - name: Install dependencies
      working-directory: ./src
      run: dotnet restore

    # 5) Build a project or solution and all of its dependencies.
    - name: Build
      working-directory: ./src
      run: dotnet build --configuration Release --no-restore

    # 6) Test a project or solution.
    - name: Test
      working-directory: ./src
      run: dotnet test --no-restore --verbosity normal

    # 7) Nuget packaging
    - name: Pack
      working-directory: ./src
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .

    # 8) Upload package back to github
    - name: Push
      working-directory: ./src
      run: dotnet nuget push CloudFit.Azure.HealthChecks.${VERSION}.nupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}